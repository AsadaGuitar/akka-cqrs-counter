datastax-java-driver {
    basic {
        contact-points = ["<your-cassandra-endpoint>:9042"]
        load-balancing-policy.local-datacenter = "<your-cassandra-data-center>"
    }
    advanced {
        reconnect-on-init = true
        auth-provider{
            class = PlainTextAuthProvider
            username = "<your-cassandra-username>"
            password = "<your-cassandra-password>"
        }
        connection {
            connect-timeout = 10 second
            init-query-timeout = 10 seconds
            set-keyspace-timeout = 10 seconds
        }
        control-connection {
            timeout = 10 seconds
        }
    }
    profiles {
        akka-persistence-cassandra-profile {
            basic.request.consistency = QUORUM
        }
        akka-persistence-cassandra-snapshot-profile {
            basic.request.consistency = QUORUM
        }
        akka-projection-cassandra-profile {
            basic.request {
                consistency = ONE
            }
        }
    }
 }
akka {
    loglevel = INFO
    extensions = [akka.persistence.Persistence]
    actor {
        provider = cluster
        serializers.jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
        serialization-bindings {
            "com.github.AsadaGuitar.akkaCqrsCounter.writeApi.CborSerializable" = jackson-cbor
        }
    }
    cluster {
        seed-nodes = [
            "akka://akkaCqrsCounter_projection@<your-application-endpoint>:2550"
        ]
        min-nr-of-members = 1
    }
    remote.artery {
        canonical.hostname = "<your-application-endpoint>"
        canonical.port = 2550
    }
    http {
        host = <your-application-hostname>
        port = <your-application-portnumber>
    }
    persistence {
        journal {
            plugin = "akka.persistence.cassandra.journal"
            auto-start-journals = ["akka.persistence.cassandra.journal"]
        }
        snapshot-store {
            plugin = "akka.persistence.cassandra.snapshot"
        }
        cassandra {
            journal {
                keyspace-autocreate = true
                tables-autocreate = true
            }
            snapshot {
                keyspace-autocreate = true
                tables-autocreate = true
            }
            query {
                refresh-interval = 2s
            }
            events-by-tag {
                eventual-consistency-delay = 25ms
                flush-interval = 25ms
                pubsub-notification = on
            }
        }
        events-by-tag {
            eventual-consistency-delay = 25ms
            flush-interval = 25ms
            pubsub-notification = on
            bucket-size = "Minute"
        }
    }
}
slick {
    profile = "slick.jdbc.PostgresProfile$"
    db {
      user = "<your-postgres-username>"
      password = "<your-postgres-password>"
      url = "jdbc:postgresql://<your-postgres-endpoint>:5432/counter"
      driver="org.postgresql.Driver"
    }
}